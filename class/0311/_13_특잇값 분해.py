from numpy.linalg import svd
import numpy as np

a = np.array([[3, -1], [1, 3], [1, 1]])


u, s, vt = svd(a)
print(f' u : \t\n {u}')
print()
''' result 
u : 	
 [[-4.08248290e-01  8.94427191e-01 -1.82574186e-01]
 [-8.16496581e-01 -4.47213595e-01 -3.65148372e-01]
 [-4.08248290e-01 -1.94289029e-16  9.12870929e-01]]
'''

print(f' s : \t\n {s}')
print()
''' result 
s : 	
 [3.46410162 3.16227766]
'''

print(f' vt : \t\n {vt}')
print()
''' result 
vt : 	
 [[-0.70710678 -0.70710678]
 [ 0.70710678 -0.70710678]]

'''


''' 축소된 행렬을 복원 '''
print(f' 축소된 행렬을 복원 s : \t\n {np.diag(s, 1)[:, 1:]}')
print()
''' result 
축소된 행렬을 복원 s : 	
 [[3.46410162 0.        ]
 [0.         3.16227766]
 [0.         0.        ]]

'''

''' 분해된 행렬을 이용해서 원래의 행렬을 복원 '''
# 분해된 행렬을 가지고 원래의 행렬을 만들 때는 제대로 복원이 되지 않을 수 있다.
print(f' 분해된 행렬을 이용해서 원래의 행렬을 복원  :  \t\n {u @ np.diag(s, 1)[:, 1:]@vt}')
print()
''' result 
분해된 행렬을 이용해서 원래의 행렬을 복원  :  	
 [[ 3. -1.]
 [ 1.  3.]
 [ 1.  1.]]
'''