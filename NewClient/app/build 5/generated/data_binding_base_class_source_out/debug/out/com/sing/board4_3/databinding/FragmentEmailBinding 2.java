// Generated by view binder compiler. Do not edit!
package com.sing.board4_3.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.sing.board4_3.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentEmailBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button authResend;

  @NonNull
  public final Button authSubmit;

  @NonNull
  public final Button emailAuth;

  @NonNull
  public final Toolbar emailFragmentToolBar;

  @NonNull
  public final Button emailNextButton;

  @NonNull
  public final EditText getEmail;

  @NonNull
  public final EditText getSerial;

  @NonNull
  public final TextView leftTime;

  private FragmentEmailBinding(@NonNull LinearLayout rootView, @NonNull Button authResend,
      @NonNull Button authSubmit, @NonNull Button emailAuth, @NonNull Toolbar emailFragmentToolBar,
      @NonNull Button emailNextButton, @NonNull EditText getEmail, @NonNull EditText getSerial,
      @NonNull TextView leftTime) {
    this.rootView = rootView;
    this.authResend = authResend;
    this.authSubmit = authSubmit;
    this.emailAuth = emailAuth;
    this.emailFragmentToolBar = emailFragmentToolBar;
    this.emailNextButton = emailNextButton;
    this.getEmail = getEmail;
    this.getSerial = getSerial;
    this.leftTime = leftTime;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentEmailBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentEmailBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_email, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentEmailBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.auth_resend;
      Button authResend = ViewBindings.findChildViewById(rootView, id);
      if (authResend == null) {
        break missingId;
      }

      id = R.id.auth_submit;
      Button authSubmit = ViewBindings.findChildViewById(rootView, id);
      if (authSubmit == null) {
        break missingId;
      }

      id = R.id.email_auth;
      Button emailAuth = ViewBindings.findChildViewById(rootView, id);
      if (emailAuth == null) {
        break missingId;
      }

      id = R.id.emailFragmentToolBar;
      Toolbar emailFragmentToolBar = ViewBindings.findChildViewById(rootView, id);
      if (emailFragmentToolBar == null) {
        break missingId;
      }

      id = R.id.email_next_button;
      Button emailNextButton = ViewBindings.findChildViewById(rootView, id);
      if (emailNextButton == null) {
        break missingId;
      }

      id = R.id.get_email;
      EditText getEmail = ViewBindings.findChildViewById(rootView, id);
      if (getEmail == null) {
        break missingId;
      }

      id = R.id.getSerial;
      EditText getSerial = ViewBindings.findChildViewById(rootView, id);
      if (getSerial == null) {
        break missingId;
      }

      id = R.id.leftTime;
      TextView leftTime = ViewBindings.findChildViewById(rootView, id);
      if (leftTime == null) {
        break missingId;
      }

      return new FragmentEmailBinding((LinearLayout) rootView, authResend, authSubmit, emailAuth,
          emailFragmentToolBar, emailNextButton, getEmail, getSerial, leftTime);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
