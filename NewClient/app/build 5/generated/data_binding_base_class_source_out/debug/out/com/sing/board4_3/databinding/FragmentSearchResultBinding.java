// Generated by view binder compiler. Do not edit!
package com.sing.board4_3.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.SearchView;
import androidx.appcompat.widget.Toolbar;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.sing.board4_3.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentSearchResultBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final RecyclerView searchResultRecycler;

  @NonNull
  public final SearchView searchResultSearch;

  @NonNull
  public final Toolbar searchResultToolbar;

  private FragmentSearchResultBinding(@NonNull LinearLayout rootView,
      @NonNull RecyclerView searchResultRecycler, @NonNull SearchView searchResultSearch,
      @NonNull Toolbar searchResultToolbar) {
    this.rootView = rootView;
    this.searchResultRecycler = searchResultRecycler;
    this.searchResultSearch = searchResultSearch;
    this.searchResultToolbar = searchResultToolbar;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentSearchResultBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentSearchResultBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_search_result, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentSearchResultBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.search_result_recycler;
      RecyclerView searchResultRecycler = ViewBindings.findChildViewById(rootView, id);
      if (searchResultRecycler == null) {
        break missingId;
      }

      id = R.id.search_result_search;
      SearchView searchResultSearch = ViewBindings.findChildViewById(rootView, id);
      if (searchResultSearch == null) {
        break missingId;
      }

      id = R.id.search_result_toolbar;
      Toolbar searchResultToolbar = ViewBindings.findChildViewById(rootView, id);
      if (searchResultToolbar == null) {
        break missingId;
      }

      return new FragmentSearchResultBinding((LinearLayout) rootView, searchResultRecycler,
          searchResultSearch, searchResultToolbar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
