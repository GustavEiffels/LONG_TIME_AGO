// Generated by view binder compiler. Do not edit!
package com.sing.board4_3.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.sing.board4_3.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentBoardReadBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final ImageView boardReadImage;

  @NonNull
  public final TextView boardReadSubject;

  @NonNull
  public final TextView boardReadText;

  @NonNull
  public final Toolbar boardReadToolbar;

  @NonNull
  public final TextView boardReadWriteDate;

  @NonNull
  public final TextView boardReadWriter;

  private FragmentBoardReadBinding(@NonNull LinearLayout rootView,
      @NonNull ImageView boardReadImage, @NonNull TextView boardReadSubject,
      @NonNull TextView boardReadText, @NonNull Toolbar boardReadToolbar,
      @NonNull TextView boardReadWriteDate, @NonNull TextView boardReadWriter) {
    this.rootView = rootView;
    this.boardReadImage = boardReadImage;
    this.boardReadSubject = boardReadSubject;
    this.boardReadText = boardReadText;
    this.boardReadToolbar = boardReadToolbar;
    this.boardReadWriteDate = boardReadWriteDate;
    this.boardReadWriter = boardReadWriter;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentBoardReadBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentBoardReadBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_board_read, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentBoardReadBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.board_read_image;
      ImageView boardReadImage = ViewBindings.findChildViewById(rootView, id);
      if (boardReadImage == null) {
        break missingId;
      }

      id = R.id.board_read_subject;
      TextView boardReadSubject = ViewBindings.findChildViewById(rootView, id);
      if (boardReadSubject == null) {
        break missingId;
      }

      id = R.id.board_read_Text;
      TextView boardReadText = ViewBindings.findChildViewById(rootView, id);
      if (boardReadText == null) {
        break missingId;
      }

      id = R.id.board_read_toolbar;
      Toolbar boardReadToolbar = ViewBindings.findChildViewById(rootView, id);
      if (boardReadToolbar == null) {
        break missingId;
      }

      id = R.id.board_read_write_date;
      TextView boardReadWriteDate = ViewBindings.findChildViewById(rootView, id);
      if (boardReadWriteDate == null) {
        break missingId;
      }

      id = R.id.board_read_writer;
      TextView boardReadWriter = ViewBindings.findChildViewById(rootView, id);
      if (boardReadWriter == null) {
        break missingId;
      }

      return new FragmentBoardReadBinding((LinearLayout) rootView, boardReadImage, boardReadSubject,
          boardReadText, boardReadToolbar, boardReadWriteDate, boardReadWriter);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
